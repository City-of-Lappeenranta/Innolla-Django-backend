# Generated by Django 2.2 on 2021-08-17 14:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('of', models.CharField(choices=[('child', 'child'), ('adult', 'adult'), ('activity', 'activity')], default='child', max_length=100)),
                ('text', models.CharField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('skills', 'skills'), ('point_of_interests', 'point of interests'), ('development_target', 'development target'), ('other', 'other')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=5)),
                ('city', models.CharField(max_length=15)),
                ('floor_plan', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='SmallGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('profiles', models.ManyToManyField(blank=True, related_name='groups', to='innolla.Profile')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='innolla.Unit')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='')),
                ('capacity', models.PositiveIntegerField(help_text='Suitable group size for this room')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='innolla.Unit')),
            ],
            options={
                'permissions': [('view_reservable_room', 'Can view reservable room')],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Resource name', max_length=100)),
                ('count', models.PositiveIntegerField(help_text='Resource count')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='innolla.Room')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now=True)),
                ('removed_at', models.DateField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='innolla.Profile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='innolla.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='tags',
            field=models.ManyToManyField(blank=True, through='innolla.ProfileTag', to='innolla.Tag'),
        ),
        migrations.AddField(
            model_name='profile',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_members', to='innolla.Unit'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(1)])),
                ('of_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments', to='innolla.ActivityTime')),
                ('of_child', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments', to='innolla.Profile')),
            ],
            options={
                'unique_together': {('of_child', 'of_activity')},
            },
        ),
        migrations.CreateModel(
            name='ActivitytimeTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now=True)),
                ('removed_at', models.DateField(default=None, null=True)),
                ('activitytime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='innolla.ActivityTime')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='innolla.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='activitytime',
            name='participants',
            field=models.ManyToManyField(blank=True, help_text="Activitytime's participants", related_name='activity_participants', to='innolla.Profile'),
        ),
        migrations.AddField(
            model_name='activitytime',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='innolla.Room'),
        ),
        migrations.AddField(
            model_name='activitytime',
            name='tags',
            field=models.ManyToManyField(blank=True, through='innolla.ActivitytimeTags', to='innolla.Tag'),
        ),
        migrations.CreateModel(
            name='AssessmentResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=5000)),
                ('of', models.CharField(choices=[('child', 'child'), ('adult', 'adult'), ('activity', 'activity')], default='child', max_length=100)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='innolla.Assessment')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responses', to='innolla.AssessmentQuestion')),
            ],
            options={
                'unique_together': {('assessment', 'question', 'of')},
            },
        ),
    ]
